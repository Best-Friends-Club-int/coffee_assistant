// --- –ü–µ—Ä–µ–∫–ª–∞–¥–∏ ---
const translations = {
  uk: {
    startTitle: "‚òï –¢–≤—ñ–π –∫–∞–≤–æ–≤–∏–π –Ω–∞—Å—Ç—Ä—ñ–π",
    startText: "–•–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—å, —è–∫–∞ –∫–∞–≤–∞ –ø–∞—Å—É—î —Å–∞–º–µ —Ç–≤–æ—î–º—É –Ω–∞—Å—Ç—Ä–æ—é? –ú–∏ –ø—ñ–¥–∫–∏–Ω–µ–º–æ —ñ–¥–µ—é!",
    startBtn: "üöÄ –ü–æ—ó—Ö–∞–ª–∏",
    resultTitle: "–í–∞—à–∞ –∫–∞–≤–∞ ‚Äî",
    alsoLike: "‚ú® –í–∞–º —Ç–∞–∫–æ–∂ –º–æ–∂–µ —Å–ø–æ–¥–æ–±–∞—Ç–∏—Å—è:"
  },
  ru: {
    startTitle: "‚òï –¢–≤–æ—ë –∫–æ—Ñ–µ–π–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
    startText: "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –∫–∞–∫–æ–π –∫–æ—Ñ–µ –ø–æ–¥–æ–π–¥—ë—Ç —Ç–≤–æ–µ–º—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é? –ú—ã –ø–æ–¥—Å–∫–∞–∂–µ–º!",
    startBtn: "üöÄ –ü–æ–µ—Ö–∞–ª–∏",
    resultTitle: "–¢–≤–æ–π –∫–æ—Ñ–µ ‚Äî",
    alsoLike: "‚ú® –¢–µ–±–µ —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –ø–æ–Ω—Ä–∞–≤–∏—Ç—å—Å—è:"
  },
  en: {
    startTitle: "‚òï Your Coffee Mood",
    startText: "Want to know which coffee matches your vibe? Let's find out!",
    startBtn: "üöÄ Let's go",
    resultTitle: "Your coffee is ‚Äî",
    alsoLike: "‚ú® You may also like:"
  },
  es: {
    startTitle: "‚òï Tu Estado de Caf√©",
    startText: "¬øQuieres saber qu√© caf√© combina con tu estado de √°nimo? ¬°Vamos a descubrirlo!",
    startBtn: "üöÄ Vamos",
    resultTitle: "Tu caf√© es ‚Äî",
    alsoLike: "‚ú® Tambi√©n te puede gustar:"
  },
  pl: {
    startTitle: "‚òï Tw√≥j Kawowy Nastr√≥j",
    startText: "Chcesz dowiedzieƒá siƒô, kt√≥ra kawa pasuje do Twojego nastroju? Podpowiemy Ci!",
    startBtn: "üöÄ Zaczynamy",
    resultTitle: "Twoja kawa to ‚Äî",
    alsoLike: "‚ú® Mo≈ºe Ci siƒô spodobaƒá:"
  }
};

// --- fallback –º–æ–≤–∏ ---
let userLang = navigator.language.slice(0, 2);
if (!translations[userLang]) userLang = "en";
const t = translations[userLang];

// --- –§—Ä–∞–∑–∏ –¥–ª—è —Ñ—ñ–Ω–∞–ª—É ---
const endPhrases = [
  "üòè –ß—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä! –ó–∞–º–æ–≤ —ñ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Å—è –≤ –Ω–∞—à–æ–º—É –∫–ª—É–±—ñ, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —â–µ –±—ñ–ª—å—à–µ!",
  "üéØ –£ —Ç–µ–±–µ —á—É–¥–æ–≤–∏–π —Å–º–∞–∫! –ß–∞—Å –∑–∞–º–æ–≤–∏—Ç–∏ –∫–∞–≤—É —Ç–∞ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –Ω–∞—à–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏!",
  "‚òï –û—Ü–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –¢–µ–ø–µ—Ä —Å–ø—Ä–∞–≤–∞ –∑–∞ –º–∞–ª–∏–º ‚Äî –ø—Ä–∏–¥–±–∞–π –∫–∞–≤—É —Ç–∞ —Ä–µ—î—Å—Ç—Ä—É–π—Å—è –≤ –Ω–∞—à–æ–º—É –∫–ª—É–±—ñ –∫–∞–≤–æ–≤–∏—Ö –µ–Ω—Ç—É–∑—ñ–∞—Å—Ç—ñ–≤.",
  "üòâ –û, —Ç–∞–∫–æ–∂ –æ–¥–Ω–∞ –∑ –º–æ—ó—Ö —É–ª—é–±–ª–µ–Ω–∏—Ö! –ê —Ç–µ–ø–µ—Ä –º–µ—Ä—à—ñ–π —Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è –¥–æ –Ω–∞—à–æ—ó –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ –∫–∞–≤–æ–º–∞–Ω—ñ–≤!",
  "‚ú® –£ —Ç–µ–±–µ —î —Å–º–∞–∫ –¥–æ –∂–∏—Ç—Ç—è, –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ! –†–æ–∑–¥—ñ–ª–∏ —Å–≤—ñ–π –¥–æ—Å–≤—ñ–¥ –∑ –Ω–∞–º–∏ —Ç–∞ —Ä–µ—î—Å—Ç—Ä—É–π—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –∫–ª—É–±—É!"
];

// --- –ö–∞–≤–∏ ---
const coffeeProfiles = [
  { name: "Ethiopia Gedeb 250g", img: "images/ethiopia_gadeb.png", link: "/store/product/43", tags: { fruit: 2, filter: 3, americano: 1 }, category: "filter" },
  { name: "Kenya AA Gikanda 250g", img: "images/kenya_aa.png", link: "/store/product/39", tags: { fruit: 2, filter: 3, americano: 1 }, category: "filter" },
  { name: "Brazil Mogiana 250g", img: "images/brazil_mogiana.png", link: "/store/product/33", tags: { choco: 2, espresso: 3, milk: 2, cappuccino: 2, moka: 1 } },
  { name: "Colombia Excelso 250g", img: "images/colombia_excleso.png", link: "/store/product/35", tags: { choco: 2, espresso: 2, milk: 1, moka: 1 } },
  { name: "Arabica Midday 250g", img: "images/midday.png", link: "/store/product/45", tags: { dessert: 2, espresso: 2, milk: 2, cappuccino: 2, moka: 1 } },
  { name: "Arabica Midnight 250g", img: "images/midnight.png", link: "/store/product/31", tags: { choco: 1, dessert: 2, espresso: 2, americano: 1, immersion: 1 } },
  { name: "Arabica Sunrise 250g", img: "images/sunrise.png", link: "/store/product/36", tags: { dessert: 2, espresso: 2, americano: 1, milk: 1, immersion: 1, moka: 1 } },
  { name: "Arabusta Dark 250g", img: "images/dark.png", link: "/store/product/29", tags: { dark: 3, espresso: 3, cappuccino: 2, moka: 2 } },
  { name: "Arabusta Amber 250g", img: "images/amber.png", link: "/store/product/30", tags: { dark: 2, espresso: 2, milk: 2, cappuccino: 2, americano: 1, moka: 1 } },
  { name: "Decaf Colombia Huila 250g", img: "images/columbia_decaf.png", link: "/store/product/34", tags: { classic: 2, espresso: 2, milk: 1, cappuccino: 1, americano: 1, immersion: 1 } }
];

// --- –õ–æ–≥—ñ–∫–∞ ---
let currentQ = 0;
let userProfile = {};
let selectedMethod = null;
let selectedDrink = null;

const quizEl = document.getElementById("quiz");
const resultEl = document.getElementById("result");
const startScreen = document.getElementById("start-screen");
const startBtn = document.getElementById("startBtn");

// –≥–µ–æ + —Ä–µ—Ñ + –∞–Ω—Ç–∏–∫–µ—à
async function adjustLink(baseLink) {
  try {
    const res = await fetch("https://ipapi.co/json/");
    const data = await res.json();
    const isUA = data.country_code === "UA";
    const url = `https://bfc24.com${isUA ? "/uk" : ""}${baseLink}?ref=nedavai&_=${Date.now()}`;
    return url;
  } catch {
    return `https://bfc24.com/uk${baseLink}?ref=nedavai&_=${Date.now()}`;
  }
}

function addTags(tags) {
  for (const [key, value] of Object.entries(tags)) {
    if (!userProfile[key]) userProfile[key] = 0;
    userProfile[key] += value;
  }
}

function showResult() {
  let coffees = [...coffeeProfiles];

  if (selectedMethod === "filter") {
    const filterCoffees = coffees.filter(c => c.category === "filter");
    renderResult(filterCoffees[0], [filterCoffees[1]]);
    return;
  }

  if (selectedDrink === "milk" || selectedDrink === "cappuccino") {
    coffees = coffees.filter(c => c.category !== "filter");
  }

  if (selectedDrink === "espresso") {
    if (Math.random() > 0.1) coffees = coffees.filter(c => c.category !== "filter");
  }

  let scores = coffees.map(coffee => {
    let score = 0;
    for (const [tag, weight] of Object.entries(userProfile)) {
      if (coffee.tags[tag]) score += Math.min(weight, coffee.tags[tag]);
    }
    return { ...coffee, score };
  });

  scores.sort((a, b) => b.score - a.score);
  renderResult(scores[0], scores.slice(1, 3));
}

async function renderResult(main, recommendations = []) {
  const mainLink = await adjustLink(main.link);
  let html = `
    <h2>${t.resultTitle} ${main.name}</h2>
    <img src="${main.img}" alt="${main.name}">
    <div class="final-phrase">${endPhrases[Math.floor(Math.random() * endPhrases.length)]}</div>
    <a href="${mainLink}" target="_blank"><button>‚òï –ó–∞–º–æ–≤–∏—Ç–∏</button></a>
  `;

  if (recommendations.length > 0) {
    html += `<h3>${t.alsoLike}</h3><div class="gallery">`;
    for (let c of recommendations) {
      const link = await adjustLink(c.link);
      html += `
        <a href="${link}" target="_blank" class="gallery-item">
          <img src="${c.img}" alt="${c.name}">
          <p>${c.name}</p>
        </a>`;
    }
    html += `</div>`;
  }

  resultEl.innerHTML = html;
  quizEl.classList.add("hidden");
  resultEl.classList.remove("hidden");
}

// —Å—Ç–∞—Ä—Ç
startBtn.addEventListener("click", () => {
  startScreen.classList.add("hidden");
  quizEl.classList.remove("hidden");
  showResult(); // —Ç—É—Ç –º–∞—î –±—É—Ç–∏ showQuestion() –ø—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –≤—Å—Ç–∞–≤–∏–º–æ –ø–∏—Ç–∞–Ω–Ω—è
});

// --- –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤ –Ω–∞ —Å—Ç–∞—Ä—Ç ---
document.querySelector("h1").innerText = t.startTitle;
startScreen.querySelector("h2").innerText = t.startText;
startBtn.innerText = t.startBtn;